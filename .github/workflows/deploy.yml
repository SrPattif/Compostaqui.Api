name: Compostaqui.Api

on:
  push:
    branches: [develop]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: hml
    env:
      COMMIT_SHA: ${{ github.sha }}
      IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.ENV_NAME }}/${{ vars.API_NAME }}:${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Deploy Docker image
        run: |
          gcloud run deploy ${{ vars.API_NAME }} \
            --image $IMAGE_NAME \
            --region us-central1 \
            --memory 128Mi \
            --min-instances 0 \
            --max-instances 1 \
            --platform managed \
            --port 8080 \
            --allow-unauthenticated \
            --set-env-vars DB_CONNECTION_STRING="${{ secrets.DB_CONNECTION_STRING }}"

      - name: Health check - Ping endpoint
        run: |
          URL=$(gcloud run services describe ${{ vars.API_NAME }} --region us-central1 --format='value(status.url)')
          echo "Calling $URL"

          for i in {1..10}; do
            response=$(curl -s -w "%{http_code}" -o result.json "$URL")
            if [ "$response" -eq 200 ]; then
              echo "✅ API is up!"
              cat result.json
              break
            else
              echo "⏳ Waiting for service to become available... ($i/10)"
              sleep 5
            fi
          done

          if [ "$response" -ne 200 ]; then
            echo "❌ API did not become available after deploy."
            exit 1
          fi
